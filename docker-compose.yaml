version: '3'
services:


  backend:
    container_name: backend
    build: ./backend/
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tuber
      - DB_USER=tuber
      - DB_PASS=tuber
      - PORT=8080
      - HOST=0.0.0.0
      - PASSWORD=password
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: frontend
    build: ./frontend/
    restart: always
    ports:
      - "88:80" # was trying to map to 88:5173....
    environment:
      - VITE_BACKEND_IP=backend
      - VITE_BACKEND_PORT=8080

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=tuber
      - POSTGRES_PASSWORD=tuber
      - POSTGRES_DB=tuber
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U tuber" ]
      interval: 10s
      timeout: 5s
      retries: 5

  search_py_service:
    container_name: search_py_service
    build: ./search_py_service/tuber_trader/
    restart: always
    ports:
      - "8000:8000" #is this right?
    volumes:
      - search_microservice_data:/var/lib/postgresql/data
    environment:
      - DATABASE_URL=postgres://tuber:tuber@postgres/tuber
    depends_on:
      - postgres #name of SERVICE it depends on
    extra_hosts:
      - "database: 127.0.0.1"

volumes:
  db:
    driver: local
  search_microservice_data:
    driver: local




