"""
Django settings for tuberTraderMicroservice project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os #to allow ENV access


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

#TODO same with the secret key env variable, something is wrong with my end, fix later...
#This tutorial may help: https://djangostars.com/blog/configuring-django-settings-best-practices/
# SECURITY WARNING: keep the secret key used in production secret (buried in the env)
SECRET_KEY = 'django-insecure-zu+9^2g&3))ui=ob(n#l8k1i!v)qw4b=pqfb6gsooavkjhtc#y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#The list of host/domain names that Django can serve, in production specify domain name or IP address for security
ALLOWED_HOSTS = ['*'] #this feels super unsafe....


# Application definition (all applications installed for this project)
#last one added after cors header install
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
]

#last two added after corsheaders install
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

#set cors header to allow requests from outside sources
#not ideal, can open security risks, probably change later TODO
CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'tuberTraderMicroservice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tuberTraderMicroservice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
#TODO when trying to swap to adding these in via the .env, the service won't connect to the socket anymore...fix later
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'tuber',
        'USER': 'tuber',
        'PASSWORD': 'tuber',
        #This makes docker happy, but the serve won't run manually:
        'HOST': 'postgres',
        #'HOST': os.environ.get('DATABASE_HOST_VENV'), #this makes the server run manually in venv...
        'PORT': '5432',
    }
}

# Password validation (rules and requirements for user passwords for this service)
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

#sets time zone
TIME_ZONE = 'UTC'

#true enables Djangos internalization features (supports multiple languages and enables features)
USE_I18N = True

#time zone support enabled if set to true
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# #added this, its an experiment:
# CORS_ORIGIN_WHITELIST = ["http://localhost:5173/"]
